{"version":3,"sources":["components/Editor.js","hooks/useLocalStorage.js","components/App.js","index.js"],"names":["Editor","props","language","displayName","value","onChange","useState","open","setOpen","className","type","onClick","prevOpen","icon","faCompressAlt","faExchangeAlt","onBeforeChange","editor","data","options","lineWrapping","lint","mode","theme","lineNumbers","useLocalStorage","key","initialValue","prefixedKey","jsonValue","localStorage","getItem","JSON","parse","setValue","useEffect","setItem","stringify","App","html","setHtml","css","setCss","js","setJs","srcDoc","setSrcDoc","timeout","setTimeout","clearTimeout","title","sandbox","frameBorder","width","height","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2SAUe,SAASA,EAAOC,GAAQ,IAE/BC,EAIAD,EAJAC,SACAC,EAGAF,EAHAE,YACAC,EAEAH,EAFAG,MACAC,EACAJ,EADAI,SAL8B,EAQTC,oBAAS,GARA,mBAQ1BC,EAR0B,KAQpBC,EARoB,KAclC,OACI,yBAAKC,UAAS,2BAAsBF,EAAO,GAAK,cAC5C,yBAAKE,UAAU,gBACTN,EACF,4BACCO,KAAK,SACLD,UAAU,sBACVE,QAAS,kBAAMH,GAAQ,SAAAI,GAAQ,OAAKA,OAEjC,kBAAC,IAAD,CAAiBC,KAAMN,EAAOO,IAAgBC,QAGpD,kBAAC,aAAD,CACEC,eAjBZ,SAAsBC,EAAQC,EAAMd,GAChCC,EAASD,IAiBDA,MAAOA,EACPK,UAAU,sBACVU,QAAS,CACLC,cAAc,EACdC,MAAK,EACLC,KAAKpB,EACLqB,MAAM,WACNC,aAAY,M,MCzCjB,SAASC,EAAgBC,EAAKC,GACzC,IAAMC,EAHK,gBAGkBF,EAD0B,EAG5BpB,oBAAS,WAChC,IAAMuB,EAAYC,aAAaC,QAAQH,GAEvC,OAAiB,MAAbC,EAA0BG,KAAKC,MAAMJ,GAEd,oBAAjBF,EACCA,IAEAA,KAXwC,mBAG/CvB,EAH+C,KAGxC8B,EAHwC,KAmBvD,OAJAC,qBAAU,WACNL,aAAaM,QAAQR,EAAaI,KAAKK,UAAUjC,MAClD,CAACwB,EAAaxB,IAEV,CAACA,EAAQ8B,GC0CLI,MA5Df,WAAgB,IAAD,EACWb,EAAgB,OAAQ,IADnC,mBACNc,EADM,KACAC,EADA,OAESf,EAAgB,MAAO,IAFhC,mBAENgB,EAFM,KAEDC,EAFC,OAGOjB,EAAgB,KAAM,IAH7B,mBAGNkB,EAHM,KAGFC,EAHE,OAIgBtC,mBAAS,IAJzB,mBAINuC,EAJM,KAIGC,EAJH,KAqBb,OAfAX,qBAAU,WACR,IAAMY,EAAUC,YAAW,WACvBF,EAAU,yCAAD,OAGGP,EAHH,uCAIIE,EAJJ,yCAKKE,EALL,8CASX,KAEF,OAAO,kBAAMM,aAAaF,MACzB,CAACR,EAAKE,EAAIE,IAEX,oCACE,yBAAKlC,UAAU,iBACb,kBAACT,EAAD,CACEE,SAAS,MACTC,YAAY,OACZC,MAAOmC,EACPlC,SAAUmC,IAGZ,kBAACxC,EAAD,CACEE,SAAS,MACTC,YAAY,MACZC,MAAOqC,EACPpC,SAAUqC,IAGZ,kBAAC1C,EAAD,CACEE,SAAS,aACTC,YAAY,aACZC,MAAOuC,EACPtC,SAAUuC,KAId,yBAAKnC,UAAU,QACb,4BACAoC,OAAQA,EACPK,MAAM,SACNC,QAAQ,gBACRC,YAAY,IACZC,MAAM,OACNC,OAAO,YCrDhBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.09e006a1.chunk.js","sourcesContent":["import React ,{useState} from 'react'\r\nimport 'codemirror/lib/codemirror.css'\r\nimport 'codemirror/theme/material.css'\r\nimport 'codemirror/mode/xml/xml'\r\nimport 'codemirror/mode/javascript/javascript'\r\nimport 'codemirror/mode/css/css'\r\nimport { Controlled as ControlledEditor } from 'react-codemirror2'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCompressAlt, faExchangeAlt } from '@fortawesome/free-solid-svg-icons'\r\n\r\nexport default function Editor(props) {\r\n    const {\r\n        language,\r\n        displayName,\r\n        value,\r\n        onChange\r\n    } = props\r\n\r\n    const [ open, setOpen] = useState(true)\r\n\r\n    function handleChange(editor, data, value){\r\n        onChange(value)\r\n    }\r\n\r\n    return (\r\n        <div className={`editor-container ${open ? '' : 'collapsed'}`}>\r\n            <div className=\"editor-title\">\r\n                { displayName }\r\n                <button\r\n                 type=\"button\"\r\n                 className=\"expand-collapse-btn\"\r\n                 onClick={() => setOpen(prevOpen => !prevOpen)}\r\n                >\r\n                    <FontAwesomeIcon icon={open ? faCompressAlt : faExchangeAlt} />\r\n                </button>\r\n            </div>\r\n              <ControlledEditor\r\n                onBeforeChange={handleChange}\r\n                value={value}\r\n                className=\"code-mirror-wrapper\"\r\n                options={{\r\n                    lineWrapping: true,\r\n                    lint:true,\r\n                    mode:language,\r\n                    theme:\"material\",\r\n                    lineNumbers:true\r\n                }}\r\n              />\r\n        </div>\r\n    )\r\n}\r\n","import {useState, useEffect} from 'react'\r\n\r\nconst PREFIX = 'codepen-clone'\r\n\r\nexport default function useLocalStorage(key, initialValue) {\r\n    const prefixedKey = PREFIX + key\r\n\r\n    const [ value, setValue] = useState(() => {\r\n        const jsonValue = localStorage.getItem(prefixedKey)\r\n\r\n        if (jsonValue != null) return JSON.parse(jsonValue)\r\n\r\n        if(typeof initialValue === 'function') {\r\n            return initialValue()\r\n        } else {\r\n            return initialValue\r\n        }\r\n    })\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(prefixedKey, JSON.stringify(value))\r\n    }, [prefixedKey, value])\r\n\r\n    return [value , setValue]\r\n}","import React ,{ useState, useEffect } from 'react'\nimport Editor from './Editor';\nimport '../App.css'\nimport useLocalStorage from \"../hooks/useLocalStorage\"\n\nfunction App() {\n  const [html, setHtml] = useLocalStorage('html', '')\n  const [css, setCss] = useLocalStorage('css', '')\n  const [js, setJs] = useLocalStorage('Js', '')\n  const [srcDoc , setSrcDoc] = useState('')\n\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n        setSrcDoc(\n        `\n          <html>\n            <body>${html}</body>\n            <style>${css}</style>\n            <script>${js}</script>\n          </html>\n        `\n        )\n    },270)\n\n    return () => clearTimeout(timeout)\n  }, [html,css,js])\n  return (\n    <>\n      <div className=\"pane top-pane\">\n        <Editor \n          language=\"xml\" \n          displayName=\"HTML\"\n          value={html} \n          onChange={setHtml} \n        />\n\n        <Editor \n          language=\"css\" \n          displayName=\"CSS\"\n          value={css} \n          onChange={setCss}\n        />\n\n        <Editor \n          language=\"javascript\" \n          displayName=\"Javascript\"\n          value={js} \n          onChange={setJs} \n        />\n      </div>\n\n      <div className=\"pane\">\n        <iframe \n        srcDoc={srcDoc}\n         title=\"output\"\n         sandbox=\"allow-scripts\"\n         frameBorder=\"0\"\n         width=\"100%\"\n         height=\"100%\"\n        />  \n      </div>      \n    </>\n  )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}